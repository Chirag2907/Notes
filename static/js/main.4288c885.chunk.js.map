{"version":3,"sources":["Components/EditNotes.js","Components/Card.js","Components/DisplayNotes.js","Components/InputNote.js","App.js","reportWebVitals.js","index.js"],"names":["EditNotes","props","className","onClick","removeEdit","title","desc","Card","useState","Edit","setEdit","length","substring","DisplayNotes","removePopup","notes","map","note","id","InputNote","Title","setTitle","Desc","setDesc","removeInput","onSubmit","e","preventDefault","addNote","alert","onChange","target","value","placeholder","style","backgroundColor","fontSize","rows","type","App","popup","setPopup","Input","setInput","Notes","setNotes","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4288c885.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./EditNotes.css\";\n\nconst EditNotes = (props) => {\n  return (\n    <div className=\"bg\">\n      <div className=\"layer2\" onClick={props.removeEdit} />\n      <div className=\"EditCard\">\n        <div className=\"table\">\n          <button className=\"edit-button\">Edit</button>\n          <b className=\"bold-title\">{props.title}</b>\n          <button className=\"delete-button\">Delete</button>\n        </div>\n        <br />\n        <p className=\"para\">{props.desc}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default EditNotes;\n","import React, { useState } from 'react'\nimport \"./Card.css\";\nimport EditNotes from './EditNotes';\nconst Card = (props) => {\n  const [Edit, setEdit] = useState(false);\n\n  const openEdit = () => {\n    setEdit(true);\n  }\n\n  const removeEdit = () => {\n    setEdit(false);\n  }\n  \n  \n  return (\n    <>\n    <section className=\"card_border\" onClick={openEdit}>\n      <h3>{props.title}</h3>\n        <p>\n            {props.desc.length > 50? props.desc.substring(0, 50) + \"...\" : props.desc}\n        </p>\n    </section>\n    {Edit && <EditNotes title={props.title} desc={props.desc} removeEdit={removeEdit} />}\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"./DisplayNotes.css\";\n// import EditNotes from './EditNotes';\n\nconst DisplayNotes = (props) => {\n  return (\n    <>\n      <div className=\"layer\" onClick={props.removePopup}></div>\n      {props.notes.length === 0 ? (\n        <div className=\"no-notes\">No notes to display</div>\n      ) : (\n        <div className=\"DisplayGrid\">\n          {props.notes.map((note) => {\n            return <Card key={note.id} title={note.title} desc={note.desc} />;\n          })}\n        </div>\n      )}\n      {/* {Edit && <EditNotes note={props.notes} />} */}\n    </>\n  );\n};\n\nexport default DisplayNotes;\n","import React, { useState } from \"react\";\n\nimport \"./InputNote.css\";\nconst InputNote = (props) => {\n  const [Title, setTitle] = useState(\"\");\n  const [Desc, setDesc] = useState(\"\");\n\n  const submit = (e) => {\n    e.preventDefault();\n    if (!Title || !Desc) {\n      alert(\"Title or Description cannot be empty\");\n      return;\n    } else {\n      props.addNote(Title, Desc);\n      props.removeInput();\n    }\n  };\n\n  return (\n    <div className=\"InputNote\">\n      <div className=\"layer1\" onClick={props.removeInput} />\n      <form className=\"cover\" onSubmit={submit}>\n        <div>\n          <br />\n          <br />\n          <label>Title</label> <br />\n          <textarea\n            onChange={(e) => setTitle(e.target.value)}\n            value={Title}\n            placeholder=\"Enter Title here\"\n            className=\"textarea\"\n            style={{ backgroundColor: \"rgb(226, 207, 183)\", fontSize: \"20px\" }}\n            rows=\"1\"\n          />\n        </div>\n        <div>\n          <label>Description</label> <br />\n          <textarea\n            onChange={(e) => setDesc(e.target.value)}\n            value={Desc}\n            placeholder=\"Enter note description here\"\n            className=\"textarea\"\n            style={{ backgroundColor: \"rgb(226, 207, 183)\", fontSize: \"20px\" }}\n            rows=\"10\"\n          />\n        </div>\n        <button type=\"submit\" title=\"Submit form\">\n          <b>Add Note</b>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default InputNote;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport DisplayNotes from \"./Components/DisplayNotes\";\nimport InputNote from \"./Components/InputNote\";\n\nfunction App() {\n  const [popup, setPopup] = useState(false);\n  const [Input, setInput] = useState(false);\n\n  const [Notes, setNotes] = useState([\n    {\n      id: 1,\n      title: \"First note\",\n      desc: \"This is my first note\",\n    },\n    {\n      id: 2,\n      title: \"Second note\",\n      desc: \"This is my second note\",\n    },\n    {\n      id: 3,\n      title: \"Third note\",\n      desc: \"This is my third note\",\n    },\n  ]);\n\n  const addNote = (title, desc) => {\n    setNotes([\n      ...Notes,\n      {\n        id: Math.floor(Math.random() * 1000),\n        title: title,\n        desc: desc,\n      },\n    ]);\n  };\n\n  const display = () => {\n    setPopup(true);\n  };\n\n  const removePopup = () => {\n    setPopup(false);\n  };\n\n  const note = () => {\n    setInput(true);\n  };\n\n  const removeInput = () => {\n    setInput(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header center\">\n        <h1>Notes</h1>\n        <div className=\"div1 center\">\n          <div id=\"card\" className=\"card\" onClick={note}>\n            <h3>New Note</h3>\n          </div>\n          <div id=\"card\" className=\"card\" onClick={display}>\n            <h3>My Notes ({Notes.length})</h3>\n          </div>\n        </div>\n        {Input && <InputNote addNote={addNote} removeInput={removeInput} />}\n        {popup && <DisplayNotes notes={Notes} removePopup={removePopup} />}\n      </header>\n    </div>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}